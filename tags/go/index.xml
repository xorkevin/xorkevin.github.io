<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go on xorkevin</title>
    <link>https://xorkevin.com/tags/go/</link>
    <description>Recent content in go on xorkevin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2018</copyright>
    <lastBuildDate>Sun, 19 May 2019 16:01:01 -0700</lastBuildDate><atom:link href="https://xorkevin.com/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Forge</title>
      <link>https://xorkevin.com/blog/2019/05/forge/</link>
      <pubDate>Sun, 19 May 2019 16:01:01 -0700</pubDate>
      
      <guid>https://xorkevin.com/blog/2019/05/forge/</guid>
      <description>Forge is a CLI utility I originally wrote to manage the complexity of my database models in my Governor project. I dislike using ORM&amp;rsquo;s, since they place many constraints on the types of queries that can be written, or they make those queries unnecessarily difficult to write with a complex API due to language limitations. SQL itself, however, is a clear and purpose built language for querying relational data. Thus, I chose to write all my database queries with templated SQL strings (with sanitized input, of course).</description>
    </item>
    
    <item>
      <title>Governor</title>
      <link>https://xorkevin.com/blog/2018/06/governor/</link>
      <pubDate>Mon, 25 Jun 2018 17:08:18 -0700</pubDate>
      
      <guid>https://xorkevin.com/blog/2018/06/governor/</guid>
      <description>As the amount of projects I have worked on grew, I noticed that many requirements were similar if not identical across them. Not only was rewriting code tedious every time I needed a similar feature, but also remembering how to back-port new implementations for existing features as I learned more about the corresponding subjects was tedious. This often involved (and for my older projects this is still the case) viewing diffs among various commits for the new feature to determine how the implementation changed.</description>
    </item>
    
  </channel>
</rss>
